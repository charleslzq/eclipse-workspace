package src.tool;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.pdfbox.cos.COSArray;
import org.apache.pdfbox.cos.COSString;
import org.apache.pdfbox.util.Matrix;

public class TextObject{
	private Matrix textMatrix;
	private String textFont;
	private boolean singleString;
	private String content;
	private COSArray contents;
	
	public TextObject(){
		textMatrix = new Matrix();
		textMatrix.setValue(0, 2, 0);
		textMatrix.setValue(1, 2, 0);
		textMatrix.setValue(2, 2, 1);
		
		textFont = null;
		
		singleString = false;
		content = null;
		contents = null;
	}
	
	public void setMatrix(float a, float b, float c, float d, float e, float f){
		textMatrix.setValue(0, 0, a);
		textMatrix.setValue(0, 1, b);
		textMatrix.setValue(1, 0, c);
		textMatrix.setValue(1, 1, d);
		textMatrix.setValue(2, 0, e);
		textMatrix.setValue(2, 1, f);
	}
	
	public void print(){
		System.out.println(textMatrix.toString());
		System.out.println(textFont);
		if(singleString)
			System.out.println(content);
		else{
			for(int i = 0; i< contents.size(); i++){
				if(contents.get(i) instanceof COSString)
					System.out.println( ((COSString)contents.get(i)).getString() );
			}
		}
	}
	
	public void setString(COSString s){
		singleString = true;
		content = s.getString();
	}
	
	public void addString(COSArray s){
		singleString = false;
		contents = s;
	}
	
	public void setFontName(String s){
		textFont = s;
	}
	
	public double getX(){
		return textMatrix.getValue(2, 0);
	}
	
	public double getY(){
		return textMatrix.getValue(2, 1);
	}
	
	public String getString(){
		if(singleString)
			return content.getString();
		else{
			String result = "";
			for(int i = 0; i < contents.size(); i++){
				Object element = contents.get(i);
				if(element instanceof COSString){
					COSString cos = (COSString)element;
					result += cos.getString(); 
				}
			}
			return result;
		}
	}
	
	public void setString(String s) throws IOException{
		singleString = true;
		content.createFromHexString(s);
	}
}
